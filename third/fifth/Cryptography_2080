
    <html>
    <head>
        <meta charset="UTF-8">
        <title>Crypto Question Bank 2080 2080</title>
    </head>
    <body>
        <h1>Crypto Question Bank 2080 - 2080</h1>
        <p><strong>Full Marks:</strong> 60 + 20 + 20</p>
        <p><strong>Pass Marks:</strong> 24 + 8 + 8</p>
        <p><strong>Time:</strong> 3 hours</p>
    <h2>Section A: Attempt any two questions.</h2><h3>Question 1</h3>
<div><p><p>Define discrete logarithms. How key generation, encryption and decryption is done in RSA. In a RSA cryptosystem, given p=13 and q=7, determine private key, public key and perform encryption and decryption for the text M=”hi” using 0 to 25 for letters from a to z.</p</p></div><div><strong>Answer:</strong><br><style>body .mathjax_wrap{width: 100%;overflow-x: scroll;margin-bottom:10px;}</style><p><strong>Discrete logarithms:</strong></p>
<p>In the context of modular arithmetic, the discrete logarithm of a number &#8220;a&#8221; to the base &#8220;g&#8221; modulo a prime number &#8220;p&#8221; is an integer &#8220;x&#8221; such that <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord"><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist"><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span><span class="mrel">≡</span></span><span class="base"><span class="mord mathnormal">a</span></span><span class="base"><span class="mopen">(</span><span class="mord"><span class="mord mathrm">mod</span></span><span class="mord mathnormal">p</span><span class="mclose">)</span></span></span></span></span>. This is a fundamental concept in number theory and forms the basis of certain cryptographic algorithms, including the Diffie-Hellman key exchange.</p>
<p><strong>RSA (Rivest-Shamir-Adleman):</strong></p>
<ol style="list-style-type:decimal;">
<li><strong>Key Generation:</strong>
<ul style="list-style-type: square;">
<li>Choose two distinct large prime numbers, p and q.</li>
<li>Compute <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">n</span><span class="mrel">=</span></span><span class="base"><span class="mord mathnormal">pq</span></span></span></span></span>, which is used as the modulus for both the public and private keys.</li>
<li>Calculate <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mrel">=</span></span><span class="base"><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mbin">−</span></span><span class="base"><span class="mord">1</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathnormal">q</span><span class="mbin">−</span></span><span class="base"><span class="mord">1</span><span class="mclose">)</span></span></span></span></span>, where <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">ϕ</span></span></span></span></span> is Euler&#8217;s totient function.</li>
<li>Choose an integer <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">e</span></span></span></span></span> such that<span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord">1</span><span class="mrel">&lt;</span></span><span class="base"><span class="mord mathnormal">e</span><span class="mrel">&lt;</span></span><span class="base"><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></span> and <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">e</span></span></span></span></span> is coprime to <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></span>.</li>
<li>Determine <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">d</span></span></span></span></span> such that <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">d</span><span class="mord mathnormal">e</span><span class="mrel">≡</span></span><span class="base"><span class="mord">1</span></span><span class="base"><span class="mopen">(</span><span class="mord"><span class="mord mathrm">mod</span></span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">))</span></span></span></span></span>.</li>
<li>The public key is <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mpunct">,</span><span class="mord mathnormal">e</span><span class="mclose">)</span></span></span></span></span>, and the private key is <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mpunct">,</span><span class="mord mathnormal">d</span><span class="mclose">)</span></span></span></span></span>.</li>
</ul>
</li>
<li><strong>Encryption:</strong>
<p>Convert the plaintext message <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">M</span></span></span></span></span> to an integer <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">m</span></span></span></span></span> using a reversible encoding scheme. Compute the ciphertext <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">C</span></span></span></span></span> using <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">C</span><span class="mrel">≡</span></span><span class="base"><span class="mord"><span class="mord mathnormal">m</span><sup><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist"><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span></span></span></sup></span></span><span class="base"><span class="mopen">(</span><span class="mord"><span class="mord mathrm">mod</span></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></span>.</li>
<li><strong>Decryption:</strong>
<p>Compute the original message <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">M</span></span></span></span></span> using <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">M</span><span class="mrel">≡</span></span><span class="base"><span class="mord"><span class="mord mathnormal">C</span><sup><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist"><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span></span></span></sup></span></span><span class="base"><span class="mopen">(</span><span class="mord"><span class="mord mathrm">mod</span></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></span>. Decode the resulting integer back to the plaintext.</li>
</ol>
<p><img data-recalc-dims="1" loading="lazy" decoding="async" class="alignnone  wp-image-29756" src="https://i0.wp.com/hamrocsit.com/wp-content/uploads/2024/02/SmartSelect_20240204_193609_CamScanner.jpg?resize=555%2C904&#038;ssl=1" alt="" width="555" height="904"></p>
</div>
<h3>Question 2</h3>
<div><p><p>Write down the encryption and decryption process at 2-DES and 3-DES. Explain the Fiestal cipher structure. Divide 5x<sup>2</sup> + 4x + 6 by 2x + 1 over GF(7).</p</p></div><div><strong>Answer:</strong><br><style>body .mathjax_wrap{width: 100%;overflow-x: scroll;margin-bottom:10px;}</style><p><strong>2-DES (Double DES):</strong></p>
<p><img data-recalc-dims="1" loading="lazy" decoding="async" class="wp-image-29757 aligncenter" src="https://i0.wp.com/hamrocsit.com/wp-content/uploads/2024/02/2des.png?resize=444%2C337&#038;ssl=1" alt="" width="444" height="337"></p>
<ol style="list-style-type:decimal;">
<li><strong>Key Generation:</strong>
<ul style="list-style-type: square;">
<li>Choose two independent keys, <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord"><span class="mord mathnormal">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist"><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span class="vlist-s">​</span></span></span></span></span></span></span></span></span> and <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord"><span class="mord mathnormal">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist"><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span class="vlist-s">​</span></span></span></span></span></span></span></span></span>.</li>
<li>Encrypt plaintext <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">P</span></span></span></span></span> with <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord"><span class="mord mathnormal">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist"><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span class="vlist-s">​</span></span></span></span></span></span></span></span></span>, then decrypt the result with <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord"><span class="mord mathnormal">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist"><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span class="vlist-s">​</span></span></span></span></span></span></span></span></span>.</li>
<li>The final ciphertext <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">C</span></span></span></span></span> is the output of the second encryption.</li>
</ul>
</li>
<li><strong>Encryption:</strong>
<ul style="list-style-type: square;">
<li><span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">C</span><span class="mrel">=</span></span><span class="base"><span class="mord"><span class="mord mathnormal">E(</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist"><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">K</span><span class="sizing reset-size3 size1 mtight">2</span><span class="vlist-s">​</span></span></span></span><span class="vlist-s">​,</span></span></span></span></span><span class="mord"><span class="mord mathnormal">E(</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist"><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">K</span><span class="sizing reset-size3 size1 mtight">1,</span><span class="vlist-s">​</span></span></span></span><span class="vlist-s">​</span></span></span></span></span><span class="mord mathnormal">P</span><span class="mclose">))</span></span></span></span></span></li>
</ul>
</li>
<li><strong>Decryption:</strong>
<ul style="list-style-type: square;">
<li><span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">P</span><span class="mrel">=</span></span><span class="base"><span class="mord"><span class="mord mathnormal">D(</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist"><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">K</span><span class="sizing reset-size3 size1 mtight">1</span><span class="vlist-s">​</span></span></span></span><span class="vlist-s">​,</span></span></span></span></span><span class="mord"><span class="mord mathnormal">D(</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist"><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">K</span><span class="sizing reset-size3 size1 mtight">2</span><span class="vlist-s">​</span></span></span></span><span class="vlist-s">​,</span></span></span></span></span><span class="mord mathnormal">C</span><span class="mclose">))</span></span></span></span></span></li>
</ul>
</li>
</ol>
<p><strong>3-DES (Triple DES):</strong></p>
<p><img data-recalc-dims="1" loading="lazy" decoding="async" class="wp-image-29758 aligncenter" src="https://i0.wp.com/hamrocsit.com/wp-content/uploads/2024/02/3des.jpg?resize=445%2C312&#038;ssl=1" alt="" width="445" height="312"></p>
<ol style="list-style-type:decimal;">
<li><strong>Key Generation:</strong>
<ul style="list-style-type: square;">
<li>Choose three independent keys, <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord"><span class="mord mathnormal">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist"><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span class="vlist-s">​</span></span></span></span></span></span></span></span></span>, <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord"><span class="mord mathnormal">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist"><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span class="vlist-s">​</span></span></span></span></span></span></span></span></span>, and <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord"><span class="mord mathnormal">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist"><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span><span class="vlist-s">​</span></span></span></span></span></span></span></span></span>.</li>
<li>Encrypt plaintext <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">P</span></span></span></span></span> with <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord"><span class="mord mathnormal">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist"><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span class="vlist-s">​</span></span></span></span></span></span></span></span></span>, decrypt with <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord"><span class="mord mathnormal">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist"><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span class="vlist-s">​</span></span></span></span></span></span></span></span></span>, and encrypt again with <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord"><span class="mord mathnormal">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist"><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span><span class="vlist-s">​</span></span></span></span></span></span></span></span></span>.</li>
</ul>
</li>
<li><strong>Encryption:</strong>
<ul style="list-style-type: square;">
<li><span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">C</span><span class="mrel">=</span></span><span class="base"><span class="mord"><span class="mord mathnormal">E(</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist"><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">K</span><span class="sizing reset-size3 size1 mtight">3</span><span class="vlist-s">​</span></span></span></span><span class="vlist-s">​,</span></span></span></span></span><span class="mord"><span class="mord mathnormal">D(</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist"><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">K</span><span class="sizing reset-size3 size1 mtight">2</span><span class="vlist-s">​</span></span></span></span><span class="vlist-s">​,</span></span></span></span></span><span class="mord"><span class="mord mathnormal">E(</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist"><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">K</span><span class="sizing reset-size3 size1 mtight">1</span><span class="vlist-s">​</span></span></span></span><span class="vlist-s">​,</span></span></span></span></span><span class="mord mathnormal">P</span><span class="mclose">)))</span></span></span></span></span></li>
</ul>
</li>
<li><strong>Decryption:</strong>
<ul style="list-style-type: square;">
<li><span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">P</span><span class="mrel">=</span></span><span class="base"><span class="mord"><span class="mord mathnormal">D(</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist"><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">K</span><span class="sizing reset-size3 size1 mtight">1</span><span class="vlist-s">​</span></span></span></span><span class="vlist-s">​,</span></span></span></span></span><span class="mord"><span class="mord mathnormal">E(</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist"><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">K</span><span class="sizing reset-size3 size1 mtight">2</span><span class="vlist-s">​</span></span></span></span><span class="vlist-s">​,</span></span></span></span></span><span class="mord"><span class="mord mathnormal">D(</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist"><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">K</span><span class="sizing reset-size3 size1 mtight">3</span><span class="vlist-s">​</span></span></span></span><span class="vlist-s">​,</span></span></span></span></span><span class="mord mathnormal">C</span><span class="mclose">)))</span></span></span></span></span></li>
</ul>
</li>
</ol>
<h3>Feistel Cipher Structure:</h3>
<p><img data-recalc-dims="1" loading="lazy" decoding="async" class="wp-image-29759 aligncenter" src="https://i0.wp.com/hamrocsit.com/wp-content/uploads/2024/02/feistel_structure.jpg?resize=444%2C445&#038;ssl=1" alt="" width="444" height="445"></p>
<p>The Feistel cipher structure is a symmetric structure used in the construction of block ciphers. It involves two basic principles: Substituion and Permutation.</p>
<ol style="list-style-type:decimal;">
<li><strong>Permutation (Transposition):</strong>
<ul style="list-style-type: square;">
<li>Permutation is achieved through the swapping or rearranging of bits within one half of the data.</li>
<li>The Feistel structure naturally incorporates permutation by swapping the two halves of the block during each round, contributing to the overall confusion and diffusion.</li>
<li>Additionally, any permutation operation within the round function enhances the overall security of the cipher.</li>
</ul>
</li>
<li><strong>Substitution:</strong>
<ul style="list-style-type: square;">
<li>Substitution is introduced through the non-linear operations within the round function.</li>
<li>S-boxes are commonly used for substitution, replacing blocks of bits with other blocks based on a predefined table.</li>
<li>The substitution operation helps in introducing non-linearity and making it challenging for attackers to analyze and predict the behavior of the cipher.</li>
</ul>
</li>
</ol>
<p><img data-recalc-dims="1" loading="lazy" decoding="async" class="wp-image-29760 alignleft" src="https://i0.wp.com/hamrocsit.com/wp-content/uploads/2024/02/SmartSelect_20240204_193512_CamScanner.jpg?resize=444%2C510&#038;ssl=1" alt="" width="444" height="510"></p>
</div>
<h3>Question 3</h3>
<div><p><p>What are the applications of hash functions? Discuss how SHA-1 algorithm generates hash value from a given message.</p</p></div><div><strong>Answer:</strong><br><style>body .mathjax_wrap{width: 100%;overflow-x: scroll;margin-bottom:10px;}</style><p><strong>Applications of Hash Functions:</strong></p>
<p>Hash functions have numerous applications in computer science and information security due to their properties of producing a fixed-size output (hash value) for variable-size input (messages). Some common applications include:</p>
<ol style="list-style-type:decimal;">
<li><strong>Data Integrity: </strong>Hash functions ensure the integrity of data by generating a fixed-size hash value. Any alteration to the data, even a small change, results in a completely different hash.</li>
<li><strong>Digital Signatures: </strong>Hash functions are a critical component of digital signatures. They help create a hash value of the message, which is then signed with a private key to provide authenticity and non-repudiation.</li>
<li><strong>Password Storage: </strong>Hash functions are used to store passwords securely. Instead of storing actual passwords, systems store the hash of passwords, making it difficult for attackers to reverse-engineer the original passwords.</li>
<li><strong>Data Deduplication: </strong>Hash functions are employed in data deduplication to identify duplicate data and eliminate redundant storage.</li>
<li><strong>Cryptographic Applications: </strong>Hash functions play a crucial role in various cryptographic protocols, including HMAC (Hash-based Message Authentication Code) for secure communication.</li>
<li><strong>Blockchain and Cryptocurrencies: </strong>Hash functions are integral to blockchain technology, where they are used to link blocks securely and maintain the integrity of the entire blockchain.</li>
</ol>
<p><strong>SHA-1 Algorithm:</strong></p>
<p><img data-recalc-dims="1" loading="lazy" decoding="async" class="wp-image-29764 aligncenter" src="https://i0.wp.com/hamrocsit.com/wp-content/uploads/2024/02/Secure-Hash-Algorithm-SHA-1.png?resize=399%2C468&#038;ssl=1" alt="" width="399" height="468"></p>
<p>The SHA-1 (Secure Hash Algorithm 1) is a widely used cryptographic hash function that produces a 160-bit (20-byte) hash value. However, it is now considered insecure for cryptographic purposes due to vulnerabilities, and its use is deprecated in favor of stronger hash functions like SHA-256.</p>
<ol style="list-style-type:decimal;">
<li><strong>Padding: </strong>The input message is padded to ensure its length is a multiple of 512 bits. Padding includes adding a &#8216;1&#8217; bit followed by zeros and the length of the original message.</li>
<li><strong>Breaking into Blocks: </strong>The padded message is divided into blocks of 512 bits.</li>
<li><strong>Initialization Vector (IV): </strong>SHA-1 uses a set of five 32-bit words as an initialization vector (IV). These words are fixed and serve as constants throughout the hashing process.</li>
<li><strong>Message Schedule: </strong>Each block is divided into sixteen 32-bit words forming the message schedule. Additional words are computed based on these initial words.</li>
<li><strong>Compression Function (Rounds): </strong>SHA-1 has 80 rounds of processing. In each round, the message schedule is combined with the current hash value using bitwise operations and logical functions.</li>
<li><strong>Final Hash Value: </strong>After all rounds, the final hash value is obtained, which is a 160-bit digest representing the input message.</li>
</ol>
</div>
<h2>Section B: Attempt any eight questions.</h2><h3>Question 4</h3>
<div><p><p>Show encryption and decryption of “csit” using hill cipher having key, k=</p>
<div class="table_wrapper"><table>
<tbody>
<tr>
<td>3</td>
<td>2</td>
</tr>
<tr>
<td>5</td>
<td>7</td>
</tr>
</tbody>
</table></div</p></div><div><strong>Answer:</strong><br><style>body .mathjax_wrap{width: 100%;overflow-x: scroll;margin-bottom:10px;}</style><p><img data-recalc-dims="1" loading="lazy" decoding="async" class="alignnone  wp-image-29763" src="https://i0.wp.com/hamrocsit.com/wp-content/uploads/2024/02/SmartSelect_20240204_193549_CamScanner.jpg?resize=550%2C899&#038;ssl=1" alt="" width="550" height="899"></p>
</div>
<h3>Question 5</h3>
<div><p><p>Give the formal definition of authentication system. Describe about one way and mutual authentication system.</p</p></div><div><strong>Answer:</strong><br><style>body .mathjax_wrap{width: 100%;overflow-x: scroll;margin-bottom:10px;}</style><p>An <strong>authentication system</strong> is a security mechanism or process that verifies the identity of a user, system, or entity, ensuring that the claimed identity is valid and authorized. The primary goal of an authentication system is to prevent unauthorized access and protect sensitive information by confirming the legitimacy of the party seeking access.</p>
<p><strong>Components of an Authentication System:</strong></p>
<ol style="list-style-type:decimal;">
<li><strong>Identification:</strong> The process of providing a unique identity (e.g., username, ID, or digital certificate) to the system.</li>
<li><strong>Authentication:</strong> The verification of the provided identity, typically through the presentation of credentials such as passwords, tokens, biometrics, or cryptographic keys.</li>
<li><strong>Authorization:</strong> Once authenticated, the system determines the level of access or permissions the authenticated entity is granted.</li>
</ol>
<p><strong>One-Way Authentication:</strong></p>
<p>One-way authentication, also known as unidirectional authentication or client authentication, involves the verification of the client or user by the server. The client provides credentials to the server, and the server verifies the identity of the client.</p>
<p><strong>Example Scenario:</strong></p>
<ul style="list-style-type: square;">
<li><strong>SSL/TLS Handshake:</strong> In secure communication protocols like SSL/TLS, the client authenticates the server by checking its digital certificate. However, the server does not necessarily authenticate the client in a basic one-way authentication setup.</li>
</ul>
<p><strong>Mutual Authentication:</strong></p>
<p>Mutual authentication, also known as two-way authentication, involves the verification of both the client and the server. Both parties provide credentials, and each authenticates the other.</p>
<p><strong>Example Scenario:</strong></p>
<ul style="list-style-type: square;">
<li><strong>SSL/TLS Mutual Authentication:</strong> In a mutual authentication setup using SSL/TLS, not only does the server present its digital certificate to the client, but the client also presents its certificate to the server. Both parties verify each other&#8217;s identity, adding an extra layer of security.</li>
</ul>
<p><strong>Mutual Authentication Process:</strong></p>
<ol style="list-style-type:decimal;">
<li><strong>Client Hello:</strong> The client initiates the connection and sends a &#8220;Client Hello&#8221; message to the server.</li>
<li><strong>Server Hello:</strong> The server responds with a &#8220;Server Hello&#8221; message, including its digital certificate.</li>
<li><strong>Client Certificate:</strong> In mutual authentication, the client sends its digital certificate to the server.</li>
<li><strong>Server Certificate Verification:</strong> The server verifies the client&#8217;s certificate using a trusted Certificate Authority (CA).</li>
<li><strong>Server Key Exchange:</strong> The server may provide additional information or key material for secure communication.</li>
<li><strong>Finished:</strong> Both the client and server exchange &#8220;Finished&#8221; messages, indicating the completion of the mutual authentication process.</li>
</ol>
</div>
<h3>Question 6</h3>
<div><p><p>List the stage of certificate life cycle. What are the types of firewalls?</p</p></div><div><strong>Answer:</strong><br><style>body .mathjax_wrap{width: 100%;overflow-x: scroll;margin-bottom:10px;}</style><p><strong>Certificate Lifecycle Stages:</strong></p>
<p>The lifecycle of a digital certificate involves several stages from creation to expiration or revocation. These stages help manage the issuance, use, and security of certificates:</p>
<ol style="list-style-type:decimal;">
<li><strong>Certificate Request: </strong>The user or entity requests a digital certificate from a Certificate Authority (CA) or a Registration Authority (RA).</li>
<li><strong>Identity Verification: </strong>The CA or RA verifies the identity of the certificate requester. This may involve validating the requester&#8217;s identity through various means.</li>
<li><strong>Key Pair Generation: </strong>The user generates a public-private key pair. The public key is included in the certificate, while the private key is kept secure and used for digital signatures and decryption.</li>
<li><strong>Certificate Issuance: </strong>The CA issues the digital certificate containing the public key and information about the certificate holder.</li>
<li><strong>Certificate Distribution: </strong>The issued certificate is distributed to the certificate holder, typically through secure means.</li>
<li><strong>Certificate Usage: </strong>The certificate holder uses the digital certificate for secure communication, digital signatures, or other cryptographic purposes.</li>
<li><strong>Certificate Renewal: </strong>Digital certificates have a limited validity period. The certificate holder may renew the certificate before it expires to continue using it.</li>
<li><strong>Certificate Revocation: </strong>If a certificate is compromised or no longer valid, the certificate holder or CA can revoke the certificate. Revocation information is published in Certificate Revocation Lists (CRLs) or through Online Certificate Status Protocol (OCSP).</li>
<li><strong>Key Pair Update: </strong>Over time, it may be advisable to update the key pair associated with a certificate for security reasons.</li>
<li><strong>Certificate Expiration: </strong>The digital certificate reaches the end of its validity period and expires. After expiration, the certificate is no longer considered valid for use.</li>
</ol>
<p><strong>Types of Firewalls:</strong></p>
<p>Firewalls are network security devices or software that monitor and control incoming and outgoing network traffic based on predetermined security rules. There are several types of firewalls, each designed to provide specific security functionalities:</p>
<ol style="list-style-type:decimal;">
<li><strong>Packet Filtering Firewall: </strong>Examines packets of data and makes decisions to allow or block based on predetermined rules, such as IP addresses and port numbers.</li>
<li><strong>Stateful Inspection Firewall: </strong>Keeps track of the state of active connections and makes decisions based on the context of the traffic, allowing or blocking packets based on the current state of the connection.</li>
<li><strong>Circuit-Level Gateway: </strong>Operates at the transport layer of the OSI model and monitors TCP handshakes. It doesn&#8217;t inspect the contents of packets but makes decisions based on the state of the connection.</li>
<li><strong>Application Layer Firewall (Proxy Server): </strong>Operates at the application layer of the OSI model, inspecting and filtering traffic based on specific applications or services. It provides granular control over the applications being used.</li>
<li><strong>Next-Generation Firewall (NGFW): </strong>Combines traditional firewall features with advanced functionalities, including intrusion prevention, deep packet inspection, and application-layer filtering, to provide more comprehensive security.</li>
</ol>
</div>
<h3>Question 7</h3>
<div><p><p>What is malicious logic? How zombies are different from trojan horses?</p</p></div><div><strong>Answer:</strong><br><style>body .mathjax_wrap{width: 100%;overflow-x: scroll;margin-bottom:10px;}</style><p><strong>Malicious logic</strong>, often referred to as malware, is software specifically designed to harm or exploit computer systems, networks, and users. Malicious logic comes in various forms, each with its own set of malicious intentions.</p>
<div class="table_wrapper" style="overflow-x:auto;"><table style="border-collapse: collapse; width: 95.5128%;">
<tbody>
<tr>
<td style="width: 45.8974%; text-align: center;"><strong>Zombie</strong></td>
<td style="width: 49.6154%; text-align: center;"><strong>Trojan Horses</strong></td>
</tr>
<tr>
<td style="width: 45.8974%; text-align: center;">A zombie, in the context of cybersecurity, refers to a compromised computer or device that has been infected with malware and is under the control of a remote attacker. A collection of compromised devices is often referred to as a botnet.</td>
<td style="width: 49.6154%; text-align: center;">A trojan horse, or simply a trojan, is a type of malware that disguises itself as legitimate software or content to deceive users into installing it. Unlike viruses and worms, trojans do not replicate themselves but rely on social engineering to spread.</td>
</tr>
<tr>
<td style="width: 45.8974%; text-align: center;">Zombies typically remain dormant until activated by a remote command or a predefined trigger. Once activated, they can be used to perform various malicious activities, such as launching distributed denial-of-service (DDoS) attacks, sending spam, or participating in other cybercriminal operations.</td>
<td style="width: 49.6154%; text-align: center;">Trojans are designed to perform malicious activities while pretending to be benign or useful software. They can create backdoors, steal sensitive information, or provide unauthorized access to a system.</td>
</tr>
<tr>
<td style="width: 45.8974%; text-align: center;">Zombies are controlled by a central command-and-control server operated by the attacker. The compromised devices, without the users&#8217; knowledge, become part of a network of zombie computers.</td>
<td style="width: 49.6154%; text-align: center;">Trojans are often delivered as seemingly harmless files or applications, and users are tricked into executing them. This can be done through email attachments, malicious websites, or disguised downloads.</td>
</tr>
<tr>
<td style="width: 45.8974%; text-align: center;">Zombies often spread through various means, including exploiting vulnerabilities, infecting other devices, or tricking users into installing malicious software.</td>
<td style="width: 49.6154%; text-align: center;">Trojans operate silently in the background, without alerting the user to their presence. They rely on deception to avoid detection and carry out their malicious functions.</td>
</tr>
<tr>
<td style="width: 45.8974%; text-align: center;"></td>
<td style="width: 49.6154%; text-align: center;"></td>
</tr>
</tbody>
</table></div>
</div>
<h3>Question 8</h3>
<div><p><p>How Miller Rabin test is used for primality testing? Show whether the number 561 passes the test.</p</p></div><div><strong>Answer:</strong><br><style>body .mathjax_wrap{width: 100%;overflow-x: scroll;margin-bottom:10px;}</style><p><img data-recalc-dims="1" loading="lazy" decoding="async" class="alignnone  wp-image-29770" src="https://i0.wp.com/hamrocsit.com/wp-content/uploads/2024/02/SmartSelect_20240205_174830_CamScanner.jpg?resize=554%2C837&#038;ssl=1" alt="" width="554" height="837"></p>
</div>
<h3>Question 9</h3>
<div><p><p>Show that the set of integers is Ring under addition and multiplication.</p</p></div><div><strong>Answer:</strong><br><style>body .mathjax_wrap{width: 100%;overflow-x: scroll;margin-bottom:10px;}</style><p>To show that the set of integers is a ring under addition and multiplication, we need to verify two main properties: the set forms an abelian group under addition, and multiplication is associative and distributive over addition.</p>
<ol style="list-style-type:decimal;">
<li><strong>Closure under Addition: </strong>For any two integers <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">a</span></span></span></span></span> and <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">b</span></span></span></span></span>, <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">a</span><span class="mbin">+</span></span><span class="base"><span class="mord mathnormal">b</span></span></span></span></span> is also an integer.</li>
<li><strong>Associativity of Addition: </strong>For any three integers <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">a</span></span></span></span></span>, <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">b</span></span></span></span></span>, and <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">c</span></span></span></span></span>, <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mbin">+</span></span><span class="base"><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mbin">+</span></span><span class="base"><span class="mord mathnormal">c</span><span class="mrel">=</span></span><span class="base"><span class="mord mathnormal">a</span><span class="mbin">+</span></span><span class="base"><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mbin">+</span></span><span class="base"><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span></span></span>.</li>
<li><strong>Existence of an Additive Identity (Zero): </strong>There exists an integer <span class="math math-inline"><span class="katex"><span class="katex-mathml">0</span><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord">0</span></span></span></span></span> such that <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">a</span><span class="mbin">+</span></span><span class="base"><span class="mord">0</span><span class="mrel">=</span></span><span class="base"><span class="mord">0</span><span class="mbin">+</span></span><span class="base"><span class="mord mathnormal">a</span><span class="mrel">=</span></span><span class="base"><span class="mord mathnormal">a</span></span></span></span></span> for any integer <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">a</span></span></span></span></span>.</li>
<li><strong>Existence of Additive Inverses: </strong>For any integer <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">a</span></span></span></span></span>, there exists an integer <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord">−</span><span class="mord mathnormal">a</span></span></span></span></span> such that <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">a</span><span class="mbin">+</span></span><span class="base"><span class="mopen">(</span><span class="mord">−</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mrel">=</span></span><span class="base"><span class="mopen">(</span><span class="mord">−</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mbin">+</span></span><span class="base"><span class="mord mathnormal">a</span><span class="mrel">=</span></span><span class="base"><span class="mord">0</span></span></span></span></span>.</li>
<li><strong>Closure under Multiplication: </strong>For any two integers <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">a</span></span></span></span></span> and <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">b</span></span></span></span></span>, <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">a</span><span class="mbin">⋅</span></span><span class="base"><span class="mord mathnormal">b</span></span></span></span></span> is also an integer.</li>
<li><strong>Associativity of Multiplication: </strong>For any three integers <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">a</span></span></span></span></span>, <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">b</span></span></span></span></span>, and <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">c</span></span></span></span></span>, <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mbin">⋅</span></span><span class="base"><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mbin">⋅</span></span><span class="base"><span class="mord mathnormal">c</span><span class="mrel">=</span></span><span class="base"><span class="mord mathnormal">a</span><span class="mbin">⋅</span></span><span class="base"><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mbin">⋅</span></span><span class="base"><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span></span></span>.</li>
<li><strong>Distributive Property: </strong>For any three integers <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">a</span></span></span></span></span>, <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">b</span></span></span></span></span>, and <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">c</span></span></span></span></span>, <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">a</span><span class="mbin">⋅</span></span><span class="base"><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mbin">+</span></span><span class="base"><span class="mord mathnormal">c</span><span class="mclose">)</span><span class="mrel">=</span></span><span class="base"><span class="mord mathnormal">a</span><span class="mbin">⋅</span></span><span class="base"><span class="mord mathnormal">b</span><span class="mbin">+</span></span><span class="base"><span class="mord mathnormal">a</span><span class="mbin">⋅</span></span><span class="base"><span class="mord mathnormal">c</span></span></span></span></span> and <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mbin">+</span></span><span class="base"><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mbin">⋅</span></span><span class="base"><span class="mord mathnormal">c</span><span class="mrel">=</span></span><span class="base"><span class="mord mathnormal">a</span><span class="mbin">⋅</span></span><span class="base"><span class="mord mathnormal">c</span><span class="mbin">+</span></span><span class="base"><span class="mord mathnormal">b</span><span class="mbin">⋅</span></span><span class="base"><span class="mord mathnormal">c</span></span></span></span></span>.</li>
</ol>
<p>Verifying each property:</p>
<ol style="list-style-type:decimal;">
<li><strong>Closure under Addition:</strong> The sum of any two integers is also an integer.</li>
<li><strong>Associativity of Addition:</strong> This is a property inherited from the integers.</li>
<li><strong>Existence of an Additive Identity (Zero):</strong> Zero is the additive identity, as <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">a</span><span class="mbin">+</span></span><span class="base"><span class="mord">0</span><span class="mrel">=</span></span><span class="base"><span class="mord">0</span><span class="mbin">+</span></span><span class="base"><span class="mord mathnormal">a</span><span class="mrel">=</span></span><span class="base"><span class="mord mathnormal">a</span></span></span></span></span> for any integer <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">a</span></span></span></span></span>.</li>
<li><strong>Existence of Additive Inverses:</strong> The additive inverse of an integer <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">a</span></span></span></span></span> is <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord">−</span><span class="mord mathnormal">a</span></span></span></span></span>, and <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">a</span><span class="mbin">+</span></span><span class="base"><span class="mopen">(</span><span class="mord">−</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mrel">=</span></span><span class="base"><span class="mopen">(</span><span class="mord">−</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mbin">+</span></span><span class="base"><span class="mord mathnormal">a</span><span class="mrel">=</span></span><span class="base"><span class="mord">0</span></span></span></span></span>.</li>
<li><strong>Closure under Multiplication:</strong> The product of any two integers is also an integer.</li>
<li><strong>Associativity of Multiplication:</strong> This is a property inherited from the integers.</li>
<li><strong>Distributive Property:</strong> This property holds for integers.</li>
</ol>
<p>Therefore, the set of integers satisfies all the properties required to be a ring under addition and multiplication.</p>
</div>
<h3>Question 10</h3>
<div><p><p>How substitution ciphers are different from transposition ciphers? Given a message M=”CSIT PROGRAM IS A HOT CAKE”, encrypt M using Rail Fence cipher with rail size 3.</p</p></div><div><strong>Answer:</strong><br><style>body .mathjax_wrap{width: 100%;overflow-x: scroll;margin-bottom:10px;}</style><div class="table_wrapper" style="overflow-x:auto;"><table style="border-collapse: collapse; width: 95%; height: 264px;">
<tbody>
<tr style="height: 24px;">
<td style="width: 43.0769%; text-align: center; height: 24px;"><strong>Substitution cipher</strong></td>
<td style="width: 51.9231%; text-align: center; height: 24px;"><strong>Transposition cipher</strong></td>
</tr>
<tr style="height: 72px;">
<td style="width: 43.0769%; text-align: center; height: 72px;">In a substitution cipher, each letter in the plaintext is replaced with another letter or symbol according to a fixed system.</td>
<td style="width: 51.9231%; text-align: center; height: 72px;">In a transposition cipher, the positions of the characters in the plaintext are rearranged according to a specific system.</td>
</tr>
<tr style="height: 72px;">
<td style="width: 43.0769%; text-align: center; height: 72px;">A simple example is the Caesar cipher, where each letter is shifted a certain number of positions down the alphabet.</td>
<td style="width: 51.9231%; text-align: center; height: 72px;">An example is the columnar transposition cipher, where the plaintext is written in rows of a fixed length, and the columns are then rearranged.</td>
</tr>
<tr style="height: 72px;">
<td style="width: 43.0769%; text-align: center; height: 72px;">Substitution ciphers may be vulnerable to frequency analysis since the relationships between characters are altered.</td>
<td style="width: 51.9231%; text-align: center; height: 72px;">Transposition ciphers are less vulnerable to frequency analysis, making them more resistant in some cases.</td>
</tr>
<tr style="height: 24px;">
<td style="width: 43.0769%; text-align: center; height: 24px;">In a substitution cipher, &#8220;A&#8221; might always be replaced with &#8220;X.&#8221;</td>
<td style="width: 51.9231%; text-align: center; height: 24px;">In a transposition cipher, the order of the characters is changed, but the characters themselves remain the same.</td>
</tr>
</tbody>
</table></div>
<p><img data-recalc-dims="1" loading="lazy" decoding="async" class="alignnone  wp-image-29773" src="https://i0.wp.com/hamrocsit.com/wp-content/uploads/2024/02/SmartSelect_20240204_193529_CamScanner.jpg?resize=495%2C262&#038;ssl=1" alt="" width="495" height="262"></p>
</div>
<h3>Question 11</h3>
<div><p><p>Describe about IPSec. List the five services of PGP.</p</p></div><div><strong>Answer:</strong><br><style>body .mathjax_wrap{width: 100%;overflow-x: scroll;margin-bottom:10px;}</style><p><strong>IPSec (Internet Protocol Security):</strong></p>
<p>IPSec is a suite of protocols designed to secure Internet Protocol (IP) communications by authenticating and encrypting each IP packet within a communication session. It operates at the network layer of the OSI model and can be used to provide security services for various protocols, including IP itself, as well as higher-layer protocols like TCP and UDP. IPSec is commonly used in virtual private network (VPN) implementations to ensure secure and private communication over the internet.</p>
<p>Key components of IPSec include:</p>
<ol style="list-style-type:decimal;">
<li><strong>Authentication Header (AH): </strong>Provides authentication and integrity checking for IP packets. Ensures that the data has not been altered during transit.</li>
<li><strong>Encapsulating Security Payload (ESP): </strong>Provides confidentiality, authentication, and integrity for the data being transmitted. Encrypts the payload of the IP packet to protect it from eavesdropping.</li>
<li><strong>Security Associations (SAs): </strong>SAs define the security parameters and keys used for protecting communication between two devices. Both AH and ESP use SAs to establish secure communication.</li>
<li><strong>Key Management: </strong>Involves the generation, distribution, and management of cryptographic keys used for encryption and authentication. Key exchange protocols like IKE (Internet Key Exchange) are often used for this purpose.</li>
<li><strong>Tunnel and Transport Modes: </strong>IPSec operates in two modes: tunnel mode and transport mode. In tunnel mode, the entire original IP packet is encrypted and becomes the payload of a new IPSec-protected packet. In transport mode, only the payload of the original packet is encrypted.</li>
</ol>
<p><strong>PGP (Pretty Good Privacy):</strong></p>
<p>PGP is a data encryption and decryption program that provides cryptographic privacy and authentication for data communication. It is commonly used for securing email communication and files. PGP uses a combination of symmetric-key cryptography for efficiency and public-key cryptography for secure key exchange.</p>
<p>Five services provided by PGP:</p>
<ol style="list-style-type:decimal;">
<li><strong>Confidentiality: </strong>PGP uses symmetric-key encryption to provide confidentiality for the content of messages or files. A unique session key is generated for each communication session.</li>
<li><strong>Authentication: </strong>PGP uses digital signatures to ensure the authenticity of the sender and the integrity of the message. The sender&#8217;s private key is used to create the digital signature, and the recipient can verify it using the sender&#8217;s public key.</li>
<li><strong>Integrity: </strong>PGP ensures the integrity of the data through the use of digital signatures. If the data has been tampered with during transmission, the signature verification will fail.</li>
<li><strong>Non-Repudiation: </strong>With the use of digital signatures, PGP provides non-repudiation, meaning that a sender cannot deny having sent a message. The digital signature serves as evidence of the sender&#8217;s identity.</li>
<li><strong>Compression: </strong>PGP includes a compression feature to reduce the size of the encrypted data, making it more efficient to transmit over networks. This can improve both confidentiality and performance.</li>
</ol>
</div>
<h3>Question 12</h3>
<div><p><p>How does meet in middle attack work in Diffie Helman key exchange protocol? Explain.</p</p></div><div><strong>Answer:</strong><br><style>body .mathjax_wrap{width: 100%;overflow-x: scroll;margin-bottom:10px;}</style><p>The Meet-in-the-Middle (MitM) attack in the context of the Diffie-Hellman key exchange protocol involves an attacker intercepting the communication between two parties and attempting to find the shared secret key by performing computations on both ends. This attack takes advantage of the fact that an attacker can intercept messages and perform computations on them independently, meeting in the middle to find the shared secret key.</p>
<ol style="list-style-type:decimal;">
<li><strong>Basic Diffie-Hellman Key Exchange:</strong>
<ul style="list-style-type: square;">
<li>Alice and Bob both choose private keys (<span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">a</span></span></span></span></span> for Alice and <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">b</span></span></span></span></span> for Bob) and agree on a public base <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">g</span></span></span></span></span> and modulus <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">p</span></span></span></span></span>.</li>
<li>They exchange public keys <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">A</span><span class="mrel">=</span></span><span class="base"><span class="mord"><span class="mord mathnormal">g</span><sup><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist"><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span></span></span></sup></span></span><span class="base"><span class="mord"><span class="mord mathrm">mod</span></span><span class="mord mathnormal">p</span></span></span></span></span> and <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">B</span><span class="mrel">=</span></span><span class="base"><span class="mord"><span class="mord mathnormal">g</span><sup><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist"><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span></span></span></sup></span></span><span class="base"><span class="mord"><span class="mord mathrm">mod</span></span><span class="mord mathnormal">p</span></span></span></span></span>.</li>
<li>Alice computes the shared secret <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">s</span><span class="mrel">=</span></span><span class="base"><span class="mord"><span class="mord mathnormal">B</span><sup><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist"><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span></span></span></sup></span></span><span class="base"><span class="mord"><span class="mord mathrm">mod</span></span><span class="mord mathnormal">p</span></span></span></span></span>, and Bob computes <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">s</span><span class="mrel">=</span></span><span class="base"><span class="mord"><span class="mord mathnormal">A</span><sup><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist"><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span></span></span></sup></span></span><span class="base"><span class="mord"><span class="mord mathrm">mod</span></span><span class="mord mathnormal">p</span></span></span></span></span>.</li>
<li>The shared secret <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">s</span></span></span></span></span> is the same for both Alice and Bob.</li>
</ul>
</li>
<li><strong>Meet-in-the-Middle Attack:</strong>
<ul style="list-style-type: square;">
<li>The attacker intercepts the public keys exchanged by Alice and Bob (<span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">A</span></span></span></span></span> and <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">B</span></span></span></span></span>).</li>
<li>The attacker precomputes possible values for <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord"><span class="mord mathnormal">g</span><sup><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist"><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span></span></sup></span></span><span class="base"><span class="mord"><span class="mord mathrm">mod</span></span><span class="mord mathnormal">p</span></span></span></span></span> for all possible private keys <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">x</span></span></span></span></span> up to a certain limit. This is done in one direction.</li>
<li>The attacker also precomputes possible values for <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord"><span class="mord mathnormal">B</span><sup><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist"><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">y</span></span></span></span></span></span></sup></span></span><span class="base"><span class="mord"><span class="mord mathrm">mod</span></span><span class="mord mathnormal">p</span></span></span></span></span> for all possible private keys <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">y</span></span></span></span></span> up to the same limit. This is done in the opposite direction.</li>
<li>The attacker stores these precomputed values in two tables.</li>
</ul>
</li>
<li><strong>Matching Computed Values:</strong>
<ul style="list-style-type: square;">
<li>The attacker then compares the precomputed values from both tables.</li>
<li>If a match is found, the attacker has identified a pair of values <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mord mathnormal">y</span><span class="mclose">)</span></span></span></span></span> such that <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord"><span class="mord mathnormal">g</span><sup><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist"><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span></span></sup></span></span><span class="base"><span class="mord"><span class="mord mathrm">mod</span></span><span class="mord mathnormal">p</span><span class="mrel">=</span></span><span class="base"><span class="mord"><span class="mord mathnormal">B</span><sup><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist"><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">y</span></span></span></span></span></span></sup></span></span><span class="base"><span class="mord"><span class="mord mathrm">mod</span></span><span class="mord mathnormal">p</span></span></span></span></span>.</li>
<li>The shared secret key <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">s</span></span></span></span></span> can then be computed as <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">s</span><span class="mrel">=</span></span><span class="base"><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">g</span><sup><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist"><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span></span></sup></span><span class="mclose">)<sup><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist"><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">y</span></span></span></span></span></span></sup></span></span><span class="base"><span class="mord"><span class="mord mathrm">mod</span></span><span class="mord mathnormal">p</span></span></span></span></span>.</li>
</ul>
</li>
<li><strong>Finding the Shared Secret:</strong>
<ul style="list-style-type: square;">
<li>Having found the pair <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mord mathnormal">y</span><span class="mclose">)</span></span></span></span></span>, the attacker computes the shared secret <span class="math math-inline"><span class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="mord mathnormal">s</span></span></span></span></span> using the computed values.</li>
</ul>
</li>
<li><strong>Possible Mitigations:</strong>
<ul style="list-style-type: square;">
<li>One way to mitigate the Meet-in-the-Middle attack in Diffie-Hellman is to use a sufficiently large key space, making it computationally infeasible for the attacker to precompute all possible values.</li>
<li>Using a strong hash function in the key derivation process can also enhance security.</li>
</ul>
</li>
</ol>
</div>
</body></html>